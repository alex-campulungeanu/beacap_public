name: Backup DB's
on: 
  push:
    branches:
      - master
  schedule:
    - cron: '0 1 * * *'

env:
  NODE_ENV: prod

jobs:
  # Label of the runner job
  backup:
    # if: "!contains(github.event.head_commit.message, 'skip ci')"
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-20.04

    # Service containers to run with `backup`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    # if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm install
      # - name: Prepare postgres image
        # run: |
        #   chmod +x ./install_pgdump.sh
        #   ./install_pgdump.sh
      - name: Run backup script
        run: npm start
        env:
          ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}
          PCLOUD_TOKEN: ${{ secrets.PCLOUD_TOKEN }}